cmake_minimum_required(VERSION 3.15)
project(delila_net VERSION 1.0.0 LANGUAGES CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Build type default
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

# Compiler flags
set(CMAKE_CXX_FLAGS_DEBUG "-g -O0 -Wall -Wextra")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG -Wall")

# Find system packages
find_package(PkgConfig REQUIRED)

# ZeroMQ
pkg_check_modules(ZMQ REQUIRED libzmq>=4.3.0)

# LZ4
pkg_check_modules(LZ4 REQUIRED liblz4>=1.9.0)

# xxHash
find_library(XXHASH_LIBRARIES xxhash REQUIRED)
find_path(XXHASH_INCLUDE_DIRS xxhash.h REQUIRED)

# Protocol Buffers
find_package(Protobuf REQUIRED)

# Include directories
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/../..  # For DELILA main includes
    ${ZMQ_INCLUDE_DIRS}
    ${LZ4_INCLUDE_DIRS}
    ${XXHASH_INCLUDE_DIRS}
    ${Protobuf_INCLUDE_DIRS}
)

# Generate protobuf files
file(GLOB PROTO_FILES "proto/*.proto")
protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS ${PROTO_FILES})

# Library source files
set(SOURCES
    src/serialization/BinarySerializer.cpp
    src/transport/Connection.cpp
    src/transport/NetworkModule.cpp
    src/config/NetworkConfig.cpp
    src/utils/SequenceTracker.cpp
    src/utils/Error.cpp
    ${PROTO_SRCS}
)

# Create the library
add_library(delila_net SHARED ${SOURCES})

# Link libraries
target_link_libraries(delila_net
    ${ZMQ_LIBRARIES}
    ${LZ4_LIBRARIES}
    ${XXHASH_LIBRARIES}
    ${Protobuf_LIBRARIES}
    pthread
)

# Compiler definitions
target_compile_definitions(delila_net PRIVATE
    ${ZMQ_CFLAGS_OTHER}
    ${LZ4_CFLAGS_OTHER}
)

# Set library properties
set_target_properties(delila_net PROPERTIES
    VERSION ${PROJECT_VERSION}
    SOVERSION 1
    PUBLIC_HEADER "include/delila/net/delila_net.hpp"
)

# Installation
include(GNUInstallDirs)

install(TARGETS delila_net
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/delila/net
)

# Install all headers
install(DIRECTORY include/delila/net/
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/delila/net
    FILES_MATCHING PATTERN "*.hpp"
)

# Install protobuf generated headers
install(FILES ${PROTO_HDRS}
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/delila/net/proto
)

# pkg-config file
configure_file(
    ${CMAKE_CURRENT_SOURCE_DIR}/delila_net.pc.in
    ${CMAKE_CURRENT_BINARY_DIR}/delila_net.pc
    @ONLY
)

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/delila_net.pc
    DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
)

# Testing
option(BUILD_TESTS "Build tests" ON)
if(BUILD_TESTS)
    enable_testing()
    find_package(GTest REQUIRED)
    find_package(benchmark QUIET)
    
    add_subdirectory(tests)
endif()

# Examples
option(BUILD_EXAMPLES "Build examples" OFF)
if(BUILD_EXAMPLES)
    add_subdirectory(examples)
endif()

# Print configuration summary
message(STATUS "=== DELILA Network Library Configuration ===")
message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "C++ standard: C++${CMAKE_CXX_STANDARD}")
message(STATUS "Install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "ZeroMQ found: ${ZMQ_VERSION}")
message(STATUS "LZ4 found: ${LZ4_VERSION}")
message(STATUS "Protobuf found: ${Protobuf_VERSION}")
message(STATUS "Build tests: ${BUILD_TESTS}")
message(STATUS "Build examples: ${BUILD_EXAMPLES}")